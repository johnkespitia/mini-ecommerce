<?php

namespace DoctrineProxies\__CG__;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Statistics extends \Statistics implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Statistics' . "\0" . 'id', '' . "\0" . 'Statistics' . "\0" . 'validpercent', '' . "\0" . 'Statistics' . "\0" . 'refund', '' . "\0" . 'Statistics' . "\0" . 'refundCheck', '' . "\0" . 'Statistics' . "\0" . 'profit', '' . "\0" . 'Statistics' . "\0" . 'payout', '' . "\0" . 'Statistics' . "\0" . 'credit', '' . "\0" . 'Statistics' . "\0" . 'balance', '' . "\0" . 'Statistics' . "\0" . 'paypercent', '' . "\0" . 'Statistics' . "\0" . 'loaded', '' . "\0" . 'Statistics' . "\0" . 'turnover', '' . "\0" . 'Statistics' . "\0" . 'incorrect', '' . "\0" . 'Statistics' . "\0" . 'invalid', '' . "\0" . 'Statistics' . "\0" . 'sold', '' . "\0" . 'Statistics' . "\0" . 'name', '' . "\0" . 'Statistics' . "\0" . 'date', '' . "\0" . 'Statistics' . "\0" . 'user'];
        }

        return ['__isInitialized__', '' . "\0" . 'Statistics' . "\0" . 'id', '' . "\0" . 'Statistics' . "\0" . 'validpercent', '' . "\0" . 'Statistics' . "\0" . 'refund', '' . "\0" . 'Statistics' . "\0" . 'refundCheck', '' . "\0" . 'Statistics' . "\0" . 'profit', '' . "\0" . 'Statistics' . "\0" . 'payout', '' . "\0" . 'Statistics' . "\0" . 'credit', '' . "\0" . 'Statistics' . "\0" . 'balance', '' . "\0" . 'Statistics' . "\0" . 'paypercent', '' . "\0" . 'Statistics' . "\0" . 'loaded', '' . "\0" . 'Statistics' . "\0" . 'turnover', '' . "\0" . 'Statistics' . "\0" . 'incorrect', '' . "\0" . 'Statistics' . "\0" . 'invalid', '' . "\0" . 'Statistics' . "\0" . 'sold', '' . "\0" . 'Statistics' . "\0" . 'name', '' . "\0" . 'Statistics' . "\0" . 'date', '' . "\0" . 'Statistics' . "\0" . 'user'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Statistics $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidpercent($validpercent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidpercent', [$validpercent]);

        return parent::setValidpercent($validpercent);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidpercent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidpercent', []);

        return parent::getValidpercent();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefund($refund)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefund', [$refund]);

        return parent::setRefund($refund);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefund()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefund', []);

        return parent::getRefund();
    }

    /**
     * {@inheritDoc}
     */
    public function setRefundCheck($refundCheck)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRefundCheck', [$refundCheck]);

        return parent::setRefundCheck($refundCheck);
    }

    /**
     * {@inheritDoc}
     */
    public function getRefundCheck()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefundCheck', []);

        return parent::getRefundCheck();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfit($profit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfit', [$profit]);

        return parent::setProfit($profit);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfit', []);

        return parent::getProfit();
    }

    /**
     * {@inheritDoc}
     */
    public function setPayout($payout)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPayout', [$payout]);

        return parent::setPayout($payout);
    }

    /**
     * {@inheritDoc}
     */
    public function getPayout()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPayout', []);

        return parent::getPayout();
    }

    /**
     * {@inheritDoc}
     */
    public function setCredit($credit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredit', [$credit]);

        return parent::setCredit($credit);
    }

    /**
     * {@inheritDoc}
     */
    public function getCredit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCredit', []);

        return parent::getCredit();
    }

    /**
     * {@inheritDoc}
     */
    public function setBalance($balance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBalance', [$balance]);

        return parent::setBalance($balance);
    }

    /**
     * {@inheritDoc}
     */
    public function getBalance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBalance', []);

        return parent::getBalance();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaypercent($paypercent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaypercent', [$paypercent]);

        return parent::setPaypercent($paypercent);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaypercent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaypercent', []);

        return parent::getPaypercent();
    }

    /**
     * {@inheritDoc}
     */
    public function setLoaded($loaded)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLoaded', [$loaded]);

        return parent::setLoaded($loaded);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoaded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLoaded', []);

        return parent::getLoaded();
    }

    /**
     * {@inheritDoc}
     */
    public function setTurnover($turnover)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTurnover', [$turnover]);

        return parent::setTurnover($turnover);
    }

    /**
     * {@inheritDoc}
     */
    public function getTurnover()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTurnover', []);

        return parent::getTurnover();
    }

    /**
     * {@inheritDoc}
     */
    public function setIncorrect($incorrect)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIncorrect', [$incorrect]);

        return parent::setIncorrect($incorrect);
    }

    /**
     * {@inheritDoc}
     */
    public function getIncorrect()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncorrect', []);

        return parent::getIncorrect();
    }

    /**
     * {@inheritDoc}
     */
    public function setInvalid($invalid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInvalid', [$invalid]);

        return parent::setInvalid($invalid);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvalid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvalid', []);

        return parent::getInvalid();
    }

    /**
     * {@inheritDoc}
     */
    public function setSold($sold)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSold', [$sold]);

        return parent::setSold($sold);
    }

    /**
     * {@inheritDoc}
     */
    public function getSold()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSold', []);

        return parent::getSold();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Users $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

}
